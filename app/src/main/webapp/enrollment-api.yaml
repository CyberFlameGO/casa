swagger: '2.0'

info:
  version: "3.1.4"
  title: Gluu casa credentials enrollment
  description: Facilitates the process of credentials enrollment in the Gluu Server.
  license:
    name: MIT
    url: http://opensource.org/licenses/MIT

#Demo server host
host: cred3.gluu.org

basePath: /casa/rest
schemes:
 - https

tags:
 - name: otp
   description: Credentials based on One-Time passcodes
 - name: fido
   description: Credentials based on FIDO standard
 
consumes:
  - application/json
produces:
  - application/json
  
paths:

  /enrollment/twilio_sms/send-code:
    get:
      tags:
        - otp
      
      description: |
        Initiates the process of verifying a mobile phone number for a user 
        by sending and OTP via SMS
        
      security:
        - casa_auth: []

      parameters:
        -
          name: number
          in: query
          description: Mobile phone number
          required: true
          type: string
        - 
          name: userid
          in: query
          description: Identifier (inum) of the user attempting the enrollment 
          required: true
          type: string
        - 
          name: Authorization
          description: Contains a bearer token
          in: header
          required: true
          type: string
          
      responses:
        200:
          description: Successful response. Empty body
        400:
          description: A parameter is missing
          schema:
            type: object
            required:
             - code
            properties:
              code: 
                type: string
                example: MISSING_PARAMS
        500:
          description: There was a failure executing the operation
          schema:
            type: object
            required: 
             - code
            properties:
              code: 
                type: string
                example: FAILURE|NUMBER_ALREADY_ENROLLED|UNKNOWN_USER_ID
              cause:
                type: string
                description: Cause of the failure (when code = FAILURE)
                example: UNDELIVERED|DELIVERY_FAILED|APP_SETUP_ERROR|SMS_SERVICE_ERROR
                
  /enrollment/twilio_sms/validate-code:
    get:
      tags:
        - otp
      description: |
        Checks validity of code received by user in SMS

      parameters:
        -
          name: code
          in: query
          description: |
            Code user claims to have received in SMS. It is compared with the 
            value sent in `send-code` operation
          required: true
          type: string
        - 
          name: userid
          in: query
          description: Identifier (inum) of the user attempting the enrollment 
          required: true
          type: string
        - 
          name: Authorization
          description: Contains a bearer token
          in: header
          required: true
          type: string
          
      responses:
        200:
          description: Successful response (codes match). Empty body
        400:
          description: A parameter is missing
          schema:
            type: object
            required:
             - code
            properties:
              code: 
                type: string
                example: MISSING_PARAMS
        500:
          description: Codes don't match or the validation couldn't be carried out
          schema:
            type: object
            required: 
             - code
            properties:
              code: 
                type: string
                example: NO_MATCH_OR_EXPIRED
                
  /enrollment/twilio_sms/creds/{userid}:
    post:
      tags:
        - otp
      description: |
        Saves a new credential (verified mobile phone) for the user whose ID 
        is passed in path parameter. Details of the credential are associated
        in credential parameter. This is supposed to be called **after** a
        successful `validate-code` operation result

      parameters:
        -
          name: credential
          in: body
          description: |
            Contains a nickname for this credential and the code used to
            originally validate the mobile phone number
          required: true
          schema: 
            $ref: '#/definitions/NamedCredential'
        - 
          name: userid
          in: path
          description: Identifier (inum) of the user attempting the enrollment 
          required: true
          type: string
        - 
          name: Authorization
          description: Contains a bearer token
          in: header
          required: true
          type: string
          
      responses:
        201:
          description: Credential enrolled (saved) successfully
          schema:
            $ref: '#/definitions/VerifiedMobile'            
        400:
          description: A parameter is missing
          schema:
            type: object
            required:
             - code
            properties:
              code: 
                type: string
                example: MISSING_PARAMS
        500:
          description: The provided key code is not recognized or there was a failure when saving the credential
          schema:
            type: object
            required: 
             - code
            properties:
              code: 
                type: string
                example: NO_MATCH_OR_EXPIRED|FAILED

  /enrollment/otp/qr-request:
    get:
      tags:
        - otp
      
      description: |
        Generates a secret key URI suitable for displaying a QR code in the browser
        
      security:
        - casa_auth: []
      parameters:
        -
          name: displayName
          in: query
          description: |
            Display name used in the secret key URI. Suitable values can be user's
            given name, email, uid, etc.
          required: true
          type: string
        - 
          name: mode
          in: query
          description: The OTP mode, HOTP (event based) or TOTP (time based)
          required: true
          type: string
          enum:
          - totp
          - hotp
        - 
          name: Authorization
          description: Contains a bearer token
          in: header
          required: true
          type: string
          
      responses:
        200:
          description: Successful response.
          schema:
            type: object
            required:
             - request
             - key
            properties:
              key: 
                type: string
                description: The secret key associated to enrollment attempt
              request: 
                type: string
                description: The secret key URI suitable for QR code generation
        400:
          description: A parameter is missing or inconsistent
          schema:
            type: object
            required:
             - code
            properties:
              code: 
                type: string
                example: NO_DISPLAY_NAME|INVALID_MODE
                
  /enrollment/otp/validate-code:
    get:
      tags:
        - otp
      
      description: |
        Determines whether the OTP code supplied is valid with respect to a key 
        previously obtained by a call to `qr-request`
        
      security:
        - casa_auth: []
      parameters:
        -
          name: code
          in: query
          description: |
            An code obtained after scanning a QR code generated using `qr-request`
            by means of an OTP mobile application
          required: true
          type: string
        - 
          name: key
          in: query
          description: The key returned as response of a `qr-request` call
          required: true
          type: string
        - 
          name: mode
          in: query
          description: The OTP mode being used for the enrollment, HOTP (event based) or TOTP (time based)
          required: true
          type: string
          enum:
          - totp
          - hotp
        - 
          name: Authorization
          description: Contains a bearer token
          in: header
          required: true
          type: string
          
      responses:
        200:
          description: |
            If the parameters passed were consistent, it returns whether the code entered
            was valid (matches the key) or not
          schema:
            type: object
            required:
             - code
            properties:
              code: 
                type: string
                example: 
        400:
          description: A parameter is missing or inconsistent
          schema:
            type: object
            required:
             - code
            properties:
              code: 
                type: string
                example: MATCH|NO_MATCH
        500:
          description: An unexpected error occured
          schema:
            type: object
            required:
            - code
            properties:
              code:
                type: string
                example: FAILURE

  /enrollment/otp/creds/{userid}:
    post:
      tags:
        - otp
      description: |
        Saves a new (soft) OTP credential for the user whose ID is passed in path parameter. 
        Details of the credential are associated in credential parameter. This is 
        supposed to be called **after** a successful `validate-code` operation with MATCH result

      parameters:
        -
          name: credential
          in: body
          description: |
            Contains a nickname for this credential and the key used to
            originally validate the OTP code
          required: true
          schema: 
            $ref: '#/definitions/NamedCredential'
        - 
          name: userid
          in: path
          description: Identifier (inum) of the user attempting the enrollment 
          required: true
          type: string
        - 
          name: Authorization
          description: Contains a bearer token
          in: header
          required: true
          type: string
          
      responses:
        201:
          description: Credential enrolled (saved) successfully. `soft` property is always true
          schema:
            $ref: '#/definitions/OTPDevice'            
        400:
          description: A parameter is missing
          schema:
            type: object
            required:
             - code
            properties:
              code: 
                type: string
                example: MISSING_PARAMS
        500:
          description: The provided key/userid is not recognized or there was a failure when saving the credential
          schema:
            type: object
            required: 
             - code
            properties:
              code: 
                type: string
                example: NO_MATCH_OR_EXPIRED|FAILED

  /enrollment/super_gluu/qr-request:
    get:
      tags:
        - fido
      
      description: |
        Generates a QR request for enrolling a supergluu device
        
      security:
        - casa_auth: []
      parameters:
        -
          name: remoteIP
          in: query
          description: The IP of the user that will attempt the enrollment
          required: false
          type: string
        - 
          name: userid
          in: query
          description: Identifier (inum) of the user attempting the enrollment 
          required: true
          type: string
        - 
          name: Authorization
          description: Contains a bearer token
          in: header
          required: true
          type: string

      responses:
        200:
          description: Successful response.
          schema:
            type: object
            required:
             - request
             - key
            properties:
              key: 
                type: string
                description: Serves an identifier for clients to poll status afterwards
              request: 
                type: string
                description: The data to use for QR code generation at the browser
        400:
          description: A parameter is missing or inconsistent
          schema:
            type: object
            required:
             - code
            properties:
              code: 
                type: string
                example: NO_USER_ID
        404:
          description: The user passed does not exist
          schema:
            type: object
            required:
             - code
            properties:
              code: 
                type: string
                example: UNKNOWN_USER_ID
                
  /enrollment/super_gluu/status:
    get:
      tags:
        - fido
      description: |
        This method returns the status of the enrollment operation since it 
        is actually triggered after the user does approval in the mobile app.
        Repeated calls to this method for the same key must separated by a 
        lag of at least 5 seconds

      parameters:
        -
          name: key
          in: query
          description: A value obtained by a previous call to `qr-request`
          required: true
          type: string
        - 
          name: Authorization
          description: Contains a bearer token
          in: header
          required: true
          type: string
          
      responses:
        201:
          description: Credential enrolled (saved) successfully
          schema:
            $ref: '#/definitions/SuperGluuDevice'       
        202:
          description: The request to this method has been accepted but there
            is no response ready yet
          schema:
            type: object
            required:
             - code
            properties:
              code: 
                type: string
                example: PENDING
        500:
          description: The enrollment was not successful. It also accounts for 
            the case when a user attempted to enroll a device he already enrolled
            in the past
          schema:
            type: object
            required:
             - code
            properties:
              code: 
                type: string
                example: DUPLICATED|FAILED
  
  /enrollment/super_gluu/creds/{userid}:
    post: 
      tags:
        - fido
      description: |
        Assigns the nick name for a **recently** enrolled super gluu device whose 
        associated user ID is passed in path parameter. Details of the credential 
        are passed in credential parameter. This is supposed to be called **after**
        a call to `status` having received the data of the credential

      parameters:
        -
          name: credential
          in: body
          description: |
            Contains a nickname for this credential and the identifier (key) obtained in 
            a previous `status` call.
          required: true
          schema: 
            $ref: '#/definitions/NamedCredential'
        - 
          name: userid
          in: path
          description: Identifier (inum) of the user owning the device
          required: true
          type: string
        - 
          name: Authorization
          description: Contains a bearer token
          in: header
          required: true
          type: string
          
      responses:
        200:
          description: Update successfully applied
          schema:
            $ref: '#/definitions/SuperGluuDevice'
        400:
          description: A parameter is missing
          schema:
            type: object
            required:
             - code
            properties:
              code: 
                type: string
                example: MISSING_PARAMS
        500:
          description: The provided key in credential parameter is not 
            recognized as a recent enrollment or the update failed
          schema:
            type: object
            required: 
             - code
            properties:
              code: 
                type: string
                example: NO_MATCH_OR_EXPIRED|FAILED

definitions:
  NamedCredential:
    type: object
    required:
     - key
     - nickName
    properties:
      key:
        type: string
        description: A temporary identifier employed during the course of enrollment of a credential.
      nickName:
        type: string
        description: The nickname associated to a credential. This piece of data is tipically assigned by the end-user in the process
  
  VerifiedMobile:
    type: object
    required:
      - nickName
    properties:
      number:
        type: string
        description: The number of the verified phone. Serves as unique identifier
      nickName:
        type: string
        description: The nickname associated to a credential
      addedOn:
       type: integer
       format: int64
       description: The timestamp representing the moment in which the credential was added

  OTPDevice:
    type: object
    required:
      - nickName
    properties:
      id:
        type: string
        description: Unique identifier assigned to this device
      soft:
        type: boolean
        description: Whether this is a hard or soft OTP credential
      nickName:
        type: string
        description: The nickname associated to a credential
      addedOn:
       type: integer
       format: int64
       description: The timestamp representing the moment in which the credential was added

  SuperGluuDevice:
    type: object
    properties:
        id:
          type: string
          description: Unique identifier assigned to this device
        creationDate:
          type: integer
          format: int64
          description: The timestamp representing the moment in which the credential was added
        lastAccessTime:
          type: integer
          format: int64
          description: The timestamp representing the moment in which the credential was used the last time (equivalent to creationDate) after enrollment
        status:
          type: string
          description: Status of device. 'active' after enrollment takes place
          enum:
          - active
          - compromised
        application:
          type: string
          description: An identifier of the FIDO application ID under which this device was enrolled
        deviceData:
          type: object
          properties:
            type: 
              type: string
              example: iPhone
            platform:
              type: string
              example: ios
            name:
              type: string
              description: The mobile phone name
            os_name:
              type: string
              example: iOS
            os_version:
              type: string
              example: 11.2.4
              
         
securityDefinitions:
  casa_auth:
    type: oauth2
    description: A OAuth2 bearer token in the header must be passed
    flow: application
    tokenUrl: https://cred3.gluu.org/oxauth/restv1/token
