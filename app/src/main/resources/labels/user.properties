#Labels applicable to UI pages of regular users

#NOTE: encoding of this file is determined in zk.xml file

usr.title=Manage your trusted credentials for account access

usr.main_intro=Your {0} account can be protected by some of the most advanced online security mechanisms including: {1}.

#methods
usr.method.choose=Choose an authentication method for this session
usr.method.none=None (password only)

#preferred method
usr.preferred_title=Preferred Authentication Mechanism
usr.preferred_text=Set your preferred mechanism for two-factor authentication (2FA). When prompted for 2FA the preferred credential will be requested first. If you do not have your preferred mechanism, you can opt to use any other previously enrolled credential.
usr.preferred_disabled=You cannot change your preferred authentication mechanism until you register at least {0} strong credentials.
usr.preferred_tooltip=Change your preference

#security keys
usr.u2f_label=Security key
usr.u2f_title=U2F Security Keys
usr.u2f_text=Security keys are the most secure form of authentication available online. Most U2F tokens only support USB; newer tokens support NFC also.
usr.u2f_buy_title=Buy U2F keys from <a href="${usr.u2f_buy_link1}" target="_blank">Amazon</a> or <a href="${usr.u2f_buy_link2}" target="_blank">Yubico</a>
usr.u2f_buy_link1=https://www.amazon.com/u2f-security-key/s?ie=UTF8&page=1&rh=i%3Aaps%2Ck%3Au2f%20security%20key
usr.u2f_buy_link2=https://www.yubico.com/store
#https://www.amazon.com/FIDO-U2F-Security-Key/s?ie=UTF8&page=1&rh=i%3Aaps%2Ck%3A%22FIDO%20U2F%20Security%20Key%22
usr.u2f_manage=Manage security keys
usr.u2f_add=Add a U2F security key
usr.u2f_touch=Touch your key button
usr.u2f_pressready=Insert your security key and press the "${general.ready}" button below
usr.u2f_edit=Change nickname of your security key
usr.u2f_del=Remove this key from your credentials
usr.u2f_mobile_unsupported=You can only enroll security keys on a desktop device

usr.u2f_unsupported_browser=This feature is not available in your browser. Please use a recent version of Opera, Firefox or Chrome.
usr.u2f_unsupported_safari={
You can use this feature in Safari only if the \
<a href="https://github.com/Safari-FIDO-U2F/Safari-FIDO-U2F" target="_blank">Safari FIDO U2F</a> plugin is installed.
}

usr.u2f_unsupported_ff={
You can use this feature in Firefox {0} only if the 
<a href="https://addons.mozilla.org/en-US/firefox/addon/u2f-support-add-on/" target="_blank">u2f add-on</a> is installed.
}

usr.u2f_enabled_u2f_ff={
Your browser has native support for u2f. Please enable it if you haven't done so. 
Use the instructions found <a href="http://www.cardps.com/news/activating-fido-u2f-on-firefox-quantum" target="_blank">here</a> as a guide.
}

#super gluu
usr.supergluu_label=Super Gluu device
usr.supergluu_title=Super Gluu Devices
usr.supergluu_text=Super Gluu is a free mobile authentication app that will send you push notifications to approve or deny at each login
usr.supergluu_manage=Manage Super Gluu devices
usr.supergluu_download=Download Super Gluu from <a href="${usr.supergluu_link_appstore}" target="_blank">AppStore</a> or <a href="${usr.supergluu_link_googleplay}" target="_blank">Google Play</a>
usr.supergluu_link_appstore=https://itunes.apple.com/us/app/super-gluu/id1093479646?ls=1&mt=8
usr.supergluu_link_googleplay=https://play.google.com/store/apps/details?id=gluu.super.gluu
usr.supergluu_add=Add a Super Gluu device
usr.supergluu_scan=Scan the QR code and tap on approve
usr.supergluu_close_automatic=This window closes automatically upon successful enrollment
usr.supergluu_install_ready=Make sure Super Gluu is installed in your smartphone. Open the app and press the button below when you are ready.
usr.supergluu_edit=Change nickname of your SuperGluu device
usr.supergluu_del=Remove this device from your list credentials
usr.supergluu_already_enrolled=This device is already enrolled!

#OTP apps
usr.otp_label=OTP Tokens
usr.otp_title=OTP Tokens
usr.otp_text={
These are physical devices or mobile applications capable of generating one-time passcodes. Popular examples are 
display cards, keyfobs, or apps such as Google Authenticator and FreeOTP.
}

usr.otp_add=Add an OTP token
usr.otp_manage=Manage OTP tokens
usr.otp_choose=Select your device's style:
usr.otp_soft=Soft token
usr.otp_soft_text=A mobile application that you can enroll just by scanning a QR code with your phone. Common examples are Google Authenticator or FreeOTP.
usr.otp_hard=Hard token
usr.otp_hard_text={
A device that shows codes in a display at regular intervals of time, or when they are touched/pressed.
Hard tokens are usually keyfobs or OTP cards.
}

usr.otp_gauth_download={
Download Google Authenticator from <a href="${usr.gauth_link_googleplay}" target="_blank">Google Play</a> or 
<a href="${usr.gauth_link_appstore}" target="_blank">Appstore</a>
}

usr.gauth_link_appstore=https://itunes.apple.com/us/app/authenticator/id766157276?mt=8
usr.gauth_link_googleplay=https://play.google.com/store/apps/details?id=com.google.android.apps.authenticator2
usr.gauth_edit=Change the nickname of your OTP device

usr.otp_gauth_install_ready=Make sure Google Authenticator or any other OTP mobile app is installed in your smartphone. Open the app and press the button below when you are ready.
usr.otp_app_scan=Scan the QR code with your app
usr.otp_enter_code_soft=Enter the code that appears in your app
usr.otp_enter_code_hard=Press your token and enter the code shown in the display
usr.otp_enter_code_short={0}-digit code

usr.otp_hotp_totp={
Choose a type. Time-based tokens generate a new code at regular time intervals (e.g. every 30 seconds). Normally they
are printed with a TOTP label on the back. Event based tokens simply generate a code when a button or tapping
surface is pressed. They feature an HOTP label printed.
}

usr.otp_totp=Time based - TOTP
usr.otp_hotp=Event based - aka counter based or HOTP
usr.otp_enter_key=Please type the key associated to your device. Normally a 40-characters string (may contain spaces):
usr.otp_entered_key_wrong=Key has illegal characters
usr.otp_type=Type:
usr.otp_type_totp=time based (TOTP)
usr.otp_type_hotp=event based (HOTP)
usr.otp_duplicated_device=This device has been already enrolled in the past

#phone numbers
usr.mobile_label=OTP sent by SMS
usr.mobile_title=Mobile Phone Numbers
usr.mobile_text=Register trusted phone numbers where you can receive one-time passcodes via SMS for authenticating.
usr.mobile_summary=Currently, you have {0} verified phone numbers
usr.mobile_manage=Manage phone numbers
usr.mobile_add=Add mobile phone
usr.mobile_code=Enter code sent
usr.mobile_sms_body={0} is the code to verify your phone number
usr.mobile_edit=Change nickname of your phone
usr.mobile_send=Send SMS
usr.mobile_sms_sent=A six-digit code was delivered to {0}. Enter it to verify your phone.
usr.mobile_sms_not_received=Didn't receive an SMS?
usr.mobile_sms_retry=Try again

usr.mobile_deleted=Phone deleted from your credentials
usr.mobile_code_wrong=Wrong code entered!
usr.mobile_already_exists=This phone number is already in use
usr.mobile_format=Valid formats: +1-123-456-7890, +1 234 456 7890, or +1234567890

#password reset
usr.passreset_title=Password Reset
usr.passreset_hint=Choose a password not in use with another site or app. Use something not too obvious or short

usr.passreset_current=Type your current password
usr.passreset_newpass=New password
usr.passreset_strength_hint=Choose a strong password
usr.passreset_confirm=Confirm new password
usr.passreset_badoldpass=Wrong current password!
usr.passreset_nomatch=Passwords do not match!
usr.passreset_change=Change password
usr.passreset_changed=Your password was successfully updated

usr.pass.strength.title=Strength level:
usr.pass.strength.level.0=none
usr.pass.strength.level.1=weak
usr.pass.strength.level.2=moderate
usr.pass.strength.level.3=good
usr.pass.strength.level.4=superb!

#Set password
usr.password_set.title=Set your password
usr.password_set.text=You don't have a password for your account yet. Set one here.
usr.password_set.success=All set!. Now you can use {0} with your new password to login to Casa.
usr.password_set.setpass=Set password

#Utility labels
usr.enter_nick=Enter a nickname for this device
usr.you_added=You have already enrolled:
usr.del_title=Remove this device from your list of credentials
usr.del_confirm=You are about to remove {0}, proceed?

usr.del_conflict_revert=If you remove this device your preferred mechanism will be reset to password because {0}
usr.del_conflict_underflow=the number of enrolled credentials after removal will be less than {0} (the minimum required to use strong authentication).
usr.del_conflict_preferred=this is the only device that matches your preferred method of authentication.
usr.del_conflict_requisite=it is required you have at least one credential belonging to: {0}.

usr.enroll.success=Your device has been successfully added
usr.enroll.error=Your device could not be enrolled

#2fa requisites
usr.warn_lock=Register multiple credentials to safeguard your account and reduce the risk of getting locked out!
usr.strong.unavailable=Contact your system administrator to be able to use two-factor authentication with your account.
usr.strong.unavailable_admin=Use the admin dashboard to add authentication methods to your Gluu Casa installation.
usr.strong.requisite_text=To enable two-factor authentication for your account, start by adding a strong credential. Choose from the following:
usr.warn_setpass=You have to set a password for your account to get access to most of Casa functionalities.

#usr.strong.enabled=Congratulations. Now you can use two-factor authentication with your account. To proceed please set your preferred authentication mechanism.

usr.logout.title=Logged out!
usr.logout.back_home=Return to home page

usr.menu_main2fa=2FA credentials

#Errors
usr.not_authorized=Unauthorized access
usr.code_wrong=Wrong or empty code entered
usr.error_updating=Error updating device data
usr.webapp_wrong_state=Gluu Casa did not start properly. Contact your admin.
